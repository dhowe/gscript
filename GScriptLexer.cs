//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GScript.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class GScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, WORD=8, WHITESPACE=9, 
		NEWLINE=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "LOWERCASE", "UPPERCASE", 
		"DIGIT", "PUNCT", "WORD", "WHITESPACE", "NEWLINE"
	};


	public GScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Say'", "'Goto'", "'Pause'", "'Wait'", "'Label'", "'Ask'", "'React'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "WORD", "WHITESPACE", 
		"NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "GScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static GScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', '^', '\b', '\x1', '\x4', '\x2', '\t', '\x2', '\x4', 
		'\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', 
		'\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', 
		'\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', '\t', 
		'\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x6', '\r', 'P', '\n', '\r', 
		'\r', '\r', '\xE', '\r', 'Q', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x5', '\xF', 'W', '\n', '\xF', '\x3', '\xF', '\x3', '\xF', '\x6', '\xF', 
		'[', '\n', '\xF', '\r', '\xF', '\xE', '\xF', '\\', '\x2', '\x2', '\x10', 
		'\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', 
		'\b', '\xF', '\t', '\x11', '\x2', '\x13', '\x2', '\x15', '\x2', '\x17', 
		'\x2', '\x19', '\n', '\x1B', '\v', '\x1D', '\f', '\x3', '\x2', '\a', '\x3', 
		'\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', '\x3', '\x2', '\x32', 
		';', '\a', '\x2', '#', '$', ')', ')', '.', '/', '<', '<', '\x62', '\x62', 
		'\x4', '\x2', '\v', '\v', '\"', '\"', '\x2', '`', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\x5', '#', '\x3', '\x2', '\x2', '\x2', '\a', '(', '\x3', '\x2', 
		'\x2', '\x2', '\t', '.', '\x3', '\x2', '\x2', '\x2', '\v', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x39', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x11', '\x43', '\x3', '\x2', '\x2', 
		'\x2', '\x13', '\x45', '\x3', '\x2', '\x2', '\x2', '\x15', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\x17', 'I', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x1B', 'S', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', 'Z', '\x3', '\x2', '\x2', '\x2', '\x1F', ' ', '\a', 'U', '\x2', 
		'\x2', ' ', '!', '\a', '\x63', '\x2', '\x2', '!', '\"', '\a', '{', '\x2', 
		'\x2', '\"', '\x4', '\x3', '\x2', '\x2', '\x2', '#', '$', '\a', 'I', '\x2', 
		'\x2', '$', '%', '\a', 'q', '\x2', '\x2', '%', '&', '\a', 'v', '\x2', 
		'\x2', '&', '\'', '\a', 'q', '\x2', '\x2', '\'', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '(', ')', '\a', 'R', '\x2', '\x2', ')', '*', '\a', '\x63', 
		'\x2', '\x2', '*', '+', '\a', 'w', '\x2', '\x2', '+', ',', '\a', 'u', 
		'\x2', '\x2', ',', '-', '\a', 'g', '\x2', '\x2', '-', '\b', '\x3', '\x2', 
		'\x2', '\x2', '.', '/', '\a', 'Y', '\x2', '\x2', '/', '\x30', '\a', '\x63', 
		'\x2', '\x2', '\x30', '\x31', '\a', 'k', '\x2', '\x2', '\x31', '\x32', 
		'\a', 'v', '\x2', '\x2', '\x32', '\n', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x34', '\a', 'N', '\x2', '\x2', '\x34', '\x35', '\a', '\x63', '\x2', 
		'\x2', '\x35', '\x36', '\a', '\x64', '\x2', '\x2', '\x36', '\x37', '\a', 
		'g', '\x2', '\x2', '\x37', '\x38', '\a', 'n', '\x2', '\x2', '\x38', '\f', 
		'\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '\x43', '\x2', '\x2', ':', 
		';', '\a', 'u', '\x2', '\x2', ';', '<', '\a', 'm', '\x2', '\x2', '<', 
		'\xE', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', 'T', '\x2', '\x2', 
		'>', '?', '\a', 'g', '\x2', '\x2', '?', '@', '\a', '\x63', '\x2', '\x2', 
		'@', '\x41', '\a', '\x65', '\x2', '\x2', '\x41', '\x42', '\a', 'v', '\x2', 
		'\x2', '\x42', '\x10', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\t', 
		'\x2', '\x2', '\x2', '\x44', '\x12', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\t', '\x3', '\x2', '\x2', '\x46', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'G', 'H', '\t', '\x4', '\x2', '\x2', 'H', '\x16', '\x3', '\x2', 
		'\x2', '\x2', 'I', 'J', '\t', '\x5', '\x2', '\x2', 'J', '\x18', '\x3', 
		'\x2', '\x2', '\x2', 'K', 'P', '\x5', '\x11', '\t', '\x2', 'L', 'P', '\x5', 
		'\x13', '\n', '\x2', 'M', 'P', '\x5', '\x17', '\f', '\x2', 'N', 'P', '\x5', 
		'\x15', '\v', '\x2', 'O', 'K', '\x3', '\x2', '\x2', '\x2', 'O', 'L', '\x3', 
		'\x2', '\x2', '\x2', 'O', 'M', '\x3', '\x2', '\x2', '\x2', 'O', 'N', '\x3', 
		'\x2', '\x2', '\x2', 'P', 'Q', '\x3', '\x2', '\x2', '\x2', 'Q', 'O', '\x3', 
		'\x2', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', 'S', 'T', '\t', '\x6', '\x2', '\x2', 'T', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\a', '\xF', '\x2', '\x2', 
		'V', 'U', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\x3', '\x2', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', '[', '\a', '\f', '\x2', '\x2', 
		'Y', '[', '\a', '\xF', '\x2', '\x2', 'Z', 'V', '\x3', '\x2', '\x2', '\x2', 
		'Z', 'Y', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x3', '\x2', '\x2', 
		'\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\x3', '\x2', 
		'\x2', '\x2', ']', '\x1E', '\x3', '\x2', '\x2', '\x2', '\b', '\x2', 'O', 
		'Q', 'V', 'Z', '\\', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
